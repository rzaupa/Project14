# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker compose reference guide at
# https://docs.docker.com/compose/compose-file/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:
  my-node-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node-server
    depends_on:
      - db
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development

  db:
    image: postgres
    container_name: postgres-server
    restart: always
    user: postgres
    volumes:
      - ./sql/easy_meal.sql:/docker-entrypoint-initdb.d/easy_meal.sql
    environment:
      POSTGRES_DB: easy_meal
      POSTGRES_PASSWORD: root
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
